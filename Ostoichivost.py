import math
import matplotlib.pyplot as plt
import numpy as np

def calculate_stability(Lwl, B, Bcent, T, H, LCG, VCG, Aw=None, rho=1025):
    
    # 1. Оценка объема водоизмещения
    # Простая оценка: предполагаем форму параллелепипеда
    Volume = Lwl * B * T * 2  # Умножаем на 2, так как два поплавка
    print("Объем водоизмещения оценен. Требуется более точное значение.")

    # 2. Расчет водоизмещения (Delta) в кг
    Delta = rho * Volume
    print(f"Водоизмещение (Delta): {Delta:.2f} кг")

    # 3. Расчет площади ватерлинии (если не задана)
    if Aw is None:
        # Простая оценка: предполагаем эллиптическую форму ватерлинии каждого поплавка
        # Это очень приблизительно!  Для более точной оценки требуется знание формы корпуса.
        Aw = 0.7 * Lwl * B * 2  # Умножаем на 2, так как два поплавка. 0.7 - примерный коэффициент
        print("Площадь ватерлинии оценена. Требуется более точное значение.")

    # 4. Расчет коэффициентов полноты (если не заданы)
    Cb = Volume / (Lwl * B * T * 2)  # Умножаем на 2, так как два поплавка.
    Cwp = Aw / (Lwl * B * 2)  # Умножаем на 2, так как два поплавка.

    print(f"Оцененный коэффициент общей полноты (Cb): {Cb:.2f}")
    print(f"Оцененный коэффициент полноты площади ватерлинии (Cwp): {Cwp:.2f}")

    # 5.  Расчет поперечного метацентрического радиуса (BMt)
    #   Формула для катамарана с прямоугольными поплавками (нужно адаптировать для другой формы)    
    I = (Bcent**2) * Lwl * B**3 / 12 + 2 * (Lwl * B**3 / 12)  # Момент инерции площади ватерлинии относительно продольной оси.
    BMt = I / Volume

    # 6. Расчет продольного метацентрического радиуса (BMl)
    Il = (2 * B * Lwl**3) / 12  # Момент инерции площади ватерлинии относительно поперечной оси.
    BMl = Il / Volume

    # 7. Расчет метацентрической высоты (GMt)
    GMt = BMt + (T / 2) - VCG  # T/2 - приближенное положение центра величины для прямоугольной формы
    GMl = BMl + (T / 2) - VCG

    # 8.  Расчет плеча восстанавливающего момента (GZ)  (упрощенная оценка для малых углов)
    #   Этот расчет очень упрощенный.  Для точной оценки требуется учет формы корпуса и погружения/выхода поплавков.
    #   Предполагаем, что до определенного угла крен происходит вокруг оси, проходящей через центр Bcent.
    angle_degrees = np.arange(0, 91, 1)
    angle_radians = np.radians(angle_degrees)
    GZ = GMt * np.sin(angle_radians)
    Righting_Arm = GZ
    Angle = angle_degrees

    print(f"Метацентрическая высота (GMt): {GMt:.2f} м")
    print(f"Метацентрическая высота (GMl): {GMl:.2f} м")
    # визуализация
    plt.figure(figsize=(8, 6))
    plt.plot(Angle, Righting_Arm)
    plt.xlabel("Угол крена (градусы)")
    plt.ylabel("Плечо восстанавливающего момента (м)")
    plt.title("Кривая статической остойчивости")
    plt.grid(True)
    plt.show()

    return GMt, Righting_Arm, Angle, Cwp, Cb, Delta, Volume


# Пример использования:
Lwl = 1198/1000  # м
B = 80/1000  # м
Bcent = 256/100  # м
T =50/1000  # м
H = 70/1000  # м
LCG = 3/1000  # м
VCG = 72/1000  # м

GMt, Righting_Arm, Angle, Cwp, Cb, Delta, Volume = calculate_stability(Lwl, B, Bcent, T, H, LCG, VCG)

"""
    Рассчитывает остойчивость катамарана (предварительная оценка) и оценивает Cwp и Cb, если они не заданы.
    Водоизмещение Delta (в кг) рассчитывается на основе Volume и rho.
    Volume оценивается по упрощенной формуле.

    Args:
        Lwl: Длина по ватерлинии (м).
        B: Ширина корпуса одного поплавка (м).
        Bcent: Расстояние между осями поплавков (м).
        T: Осадка (м).
        H: Высота надводного борта (м).
        LCG: Продольное положение центра тяжести (м).
        VCG: Вертикальное положение центра тяжести (м).
        Aw: Площадь ватерлинии (м^2). Если None, будет оценена.
        rho: Плотность воды (кг/м^3).

    Returns:
        GM: Метацентрическая высота (м).
        Righting_Arm: плечо восстанавливающего момента
        Angle: угол крена
        Cwp: Коэффициент полноты площади ватерлинии (оценка).
        Cb: Коэффициент общей полноты (оценка).
        Delta: Водоизмещение (кг).
        Volume: Оцененный объем (м^3)
    """
